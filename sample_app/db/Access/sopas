#!/usr/bin/perl

use strict;
use Data::Dumper;
use Term::ReadLine;
use Access;

###### Intro
system("clear");
my $creditos =	"Trabalho Realizado Por:
	José Pedro Silva\tpg17xxx\t\tzepedro.cs\@gmail.com
	Mário Ulisses Costa\tpg15xxx\t\tulissesmonhecosta\@gmail.com
	Pedro Faria\t\tpg17684\t\tpedro.faria.80\@gmail.com\n\n";
print 	"\n\n",
	" S. O. P. A. S. - Submissão Online Para Análise de Software\n\n",
	"...\nInterface gráfica para a aplicação\n\n",
	,$creditos;
######

######begin main

my $access = Access->new;				#Iniciação do nosso objecto
my $term = new Term::ReadLine 'Simple Perl Menu';	#Módulo para usar o readline
my $prompt = " → "; my $flag = 1;			#Prompt e flag do ciclo principal
my $attrs = $term->Attribs;				#Atributos do módulo readline
$attrs->{completion_entry_function} = $attrs->{list_completion_function};
my %comandos = (					#Hash que contém comandos e apontadores para funções
	'list-users'		=>	\&getUsers,
	'list-enunciados'	=>	\&getEnunciados,
	'list-concorrentes'	=>	\&getConcorrentes,
	'list-concursos'	=>	\&getConcursos,
	'list-linguagens'	=>	\&getLinguagens,
	'dois'	=>	\&dummy,
	tres	=>	\&dummy,
	quatro	=>	\&dummy,
	cinco	=>	\&dummy,
	seis	=>	\&dummy,
	sete	=>	\&dummy,
	oito	=>	\&dummy,
	"exit"	=>	\&byebye,
	help	=>	\&help,
);
$attrs->{completion_word} = [keys(%comandos)];		#Adiciona comandos ao prompt

while($flag){
	defined($_ = $term->readline($prompt));
	chomp($_);
	$_ =~ s/\s+//g;
	
	#print "Comando: $_\n";		
	if($comandos{$_}){
		$comandos{$_}->();			#executa comando pretendido
	}elsif($_){
		print "Comando não existe\nEscreva <help> para abrir o manual deste interpretador\n";
					
	}else {}
	
	$term->addhistory($_) if /\S/;			#adiciona comando ao histórico
}

#####end main

#Função para exibir uma ajuda
sub help {
	print 	"Ajuda:\n",
		"\tlist-users → listar todos os utilizadores\n",
		"\tlist-concursos → listar todos os concursos\n",
		"\tlist-concorrentes → listar todos os concorrentes\n",
		"\tlist-enunciados → listar todos os enunciados\n",
		"\tlist-linguagens → listar todas os linguagens\n",
		"\tseis - listar todos os utilizadores\n",
		"\tsete - listar todos os utilizadores\n",
		"\toito - listar todos os utilizadores\n",
		"\tnove - listar todos os utilizadores\n",
		"\tdez - listar todos os utilizadores\n",
		"\thelp - exibe esta ajuda\n";
}

#Muda a variável de cujo ciclo principal depende
sub byebye {
	print "\nBye bye!\n\n";
	$flag = 0;
}

#Função teste
sub dummy {
	print "I'm a dummy function\n";
}

#list users
sub getUsers {
	my @listUsers = $access->get_users;
	foreach(sort {$a->name cmp $b->name} @listUsers){
	        print $_->name . "\n";
	}
}

#list enunciados
sub getEnunciados {
	my @listEnunciados = $access->get_enunciados;
	foreach(sort {$a->titulo cmp $b->titulo} @listEnunciados){
	        print $_->titulo . "\n";
	}
}

#list concorrentes
sub getConcorrentes {
	my @listConcorrentes = $access->get_concorrentes;
	foreach(sort {$a->nome cmp $b->nome} @listConcorrentes){
	        print $_->nome . "\n";
	}
}

#list concursos
sub getConcursos {
	my @listConcursos = $access->get_concursos;
	foreach(sort {$a->tit cmp $b->tit} @listConcursos){
	        print $_->tit . "\n";
	}
}

#list linguagens
sub getLinguagens {
	my @listLinguagens = $access->get_languages;
	foreach(sort {$a->ling cmp $b->ling} @listLinguagens){
	        print $_->ling . "\n";
	}
}
